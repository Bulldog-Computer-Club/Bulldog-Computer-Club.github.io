"use strict";(self.webpackChunkbulldog_computer_club_website=self.webpackChunkbulldog_computer_club_website||[]).push([[422],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(4334);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),r=n(7294),i=n(4334),o=n(2466),l=n(6550),s=n(1980),u=n(7392),c=n(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=d(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,u]=f({queryString:n,groupId:a}),[p,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),h=(()=>{const e=s??p;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,i]),tabValues:i}}var h=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==l&&(p(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},o,{className:(0,i.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":l===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=b(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",g.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function N(e){const t=(0,h.Z)();return r.createElement(v,(0,a.Z)({key:String(t)},e))}},7992:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),i=n(4866),o=n(5162);const l={title:"Fast I/O",sidebar_position:2},s=void 0,u={unversionedId:"2023-24/advanced/fast-io",id:"2023-24/advanced/fast-io",title:"Fast I/O",description:"Some CCC problems have large amounts of input (tens of thousands of lines),",source:"@site/docs/2023-24/advanced/fast-io.mdx",sourceDirName:"2023-24/advanced",slug:"/2023-24/advanced/fast-io",permalink:"/docs/2023-24/advanced/fast-io",draft:!1,editUrl:"https://github.com/bulldog-computer-club/bulldog-computer-club.github.io/edit/main/docs/2023-24/advanced/fast-io.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Fast I/O",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Algorithm Analysis",permalink:"/docs/2023-24/advanced/algorithm-analysis"},next:{title:"CCC '20 J3",permalink:"/docs/archive/ccc/solutions/ccc20j3"}},c={},p=[],d={toc:p},m="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Some CCC problems have large amounts of input (tens of thousands of lines),\nwhich can cause an otherwise correct and efficient solution to time out while\nreading the input."),(0,r.kt)("p",null,"To mitigate this issue, fast I/O methods can be used."),(0,r.kt)(i.Z,{groupId:"prog-langs",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"py",label:"Python",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"Instead of using ",(0,r.kt)("inlineCode",{parentName:"p"},"input()"),", read directly from ",(0,r.kt)("inlineCode",{parentName:"p"},"sys.stdin"),". A hacky way to do\nthis is to simply redefine ",(0,r.kt)("inlineCode",{parentName:"p"},"input")," as ",(0,r.kt)("inlineCode",{parentName:"p"},"sys.stdin.readline")," at the beginning of\nyour program:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"input = sys.stdin.readline\n# Use input() as normal\n")),(0,r.kt)("p",null,"Note, however, that the result of ",(0,r.kt)("inlineCode",{parentName:"p"},"sys.stdin.readline")," will contain trailing\nnewlines, which may need to be stripped out manually.")),(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"java.util.Scanner")," has a number of useful features such as splitting using\nregular expressions instead of whitespace and proper handling of non-ASCII\ndigits; however, these incur unnecessary overhead in most competitive\nprogramming scenarios. For higher performance, a ",(0,r.kt)("inlineCode",{parentName:"p"},"java.io.BufferedReader")," can be\nused in combination with a ",(0,r.kt)("inlineCode",{parentName:"p"},"java.util.StringTokenizer"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n// Read an integer on one line\nint i = Integer.parseInt(br.readLine());\n\n// Read several integers on the same line\nStringTokenizer st = new StringTokenizer(br.readLine());\nwhile (st.hasMoreTokens()) {\n    int i = Integer.parseInt(st.nextToken());\n}\n"))),(0,r.kt)(o.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("p",null,"One option is to use the C standard library functions ",(0,r.kt)("inlineCode",{parentName:"p"},"scanf")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"printf")," instead\nof the standard ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cout")," streams; however, ",(0,r.kt)("inlineCode",{parentName:"p"},"scanf")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"printf"),"\ncan be somewhat unwieldy and error-prone."),(0,r.kt)("p",null,"On the other hand, if you want to keep using ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cout"),", there are\ntwo things you can do to improve their performance:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Unsync the C and C++ standard streams.")," By default, the C and C++ standard\nstreams are synced; this allows both to be used in the same program predictably.\nYou can disable syncing by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"std::ios_base::sync_with_stdio(false)"),". After\ndoing this, you should refrain from using ",(0,r.kt)("inlineCode",{parentName:"p"},"scanf"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"printf")," \u2014 instead, stick to\n",(0,r.kt)("inlineCode",{parentName:"p"},"std::cin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cout"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Untie ",(0,r.kt)("inlineCode",{parentName:"em"},"std::cin"),".")," By default, the standard input and output streams are tied,\nmeaning any operations on one will automatically flush the other. This ensures\nsequences of operations like"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'int n{};\nstd::cout << "What\'s your favorite number? ";\nstd::cin >> n;\n')),(0,r.kt)("p",{parentName:"li"},"behave as expected. If ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cout")," are not tied, executing the above\nprogram may result in the prompt ",(0,r.kt)("inlineCode",{parentName:"p"},"What's your favorite number?")," being output only ",(0,r.kt)("em",{parentName:"p"},"after"),"\nthe user enters a number, as the output is buffered. If this is not an issue \u2014 as is the\ncase in most CCC problems \u2014 ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cin")," may be untied via ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cin.tie(nullptr)"),"."))),(0,r.kt)("p",null,"In brief, to speed up ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cout"),", add the following lines at the\nbeginning of your code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"std::ios_base::sync_with_stdio(false);\nstd::cin.tie(nullptr);\n")),(0,r.kt)("p",null,"Then, use ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"std::cout")," as usual."))))}f.isMDXComponent=!0}}]);