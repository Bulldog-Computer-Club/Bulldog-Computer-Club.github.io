"use strict";(self.webpackChunkbulldog_computer_club_website=self.webpackChunkbulldog_computer_club_website||[]).push([[666],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),h=o,d=c["".concat(s,".").concat(h)]||c[h]||m[h]||r;return n?i.createElement(d,a(a({ref:t},u),{},{components:n})):i.createElement(d,a({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<r;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4903:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var i=n(7462),o=(n(7294),n(3905));const r={title:"Joe's Doubling Points",sidebar_position:1},a="Joe\u2019s Doubling Points",l={unversionedId:"archive/weekly-questions/joes-doubling-points",id:"archive/weekly-questions/joes-doubling-points",title:"Joe's Doubling Points",description:"The Cooldog Programming Club is a club that hosts a programming competition each week. Each member of the Cooldog Programming Group starts out in the year with $K$ points. Each week during their meeting, the Cooldog Programming Group organizes a competition, where members can gain points if they are the first to solve the question.",source:"@site/docs/archive/weekly-questions/joes-doubling-points.md",sourceDirName:"archive/weekly-questions",slug:"/archive/weekly-questions/joes-doubling-points",permalink:"/docs/archive/weekly-questions/joes-doubling-points",draft:!1,editUrl:"https://github.com/bulldog-computer-club/bulldog-computer-club.github.io/edit/main/docs/archive/weekly-questions/joes-doubling-points.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Joe's Doubling Points",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Projects",permalink:"/docs/archive/projects"},next:{title:"Joe's Water Corporation",permalink:"/docs/archive/weekly-questions/joes-water-corporation"}},s={},p=[{value:"Input",id:"input",level:3},{value:"Output",id:"output",level:3},{value:"Example 1",id:"example-1",level:2},{value:"Input",id:"input-1",level:3},{value:"Output",id:"output-1",level:3},{value:"Explanation",id:"explanation",level:3},{value:"Example 2",id:"example-2",level:2},{value:"Input",id:"input-2",level:3},{value:"Output",id:"output-2",level:3},{value:"Explanation",id:"explanation-1",level:3}],u={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"joes-doubling-points"},"Joe\u2019s Doubling Points"),(0,o.kt)("p",null,"The Cooldog Programming Club is a club that hosts a programming competition each week. Each member of the Cooldog Programming Group starts out in the year with $K$ points. Each week during their meeting, the Cooldog Programming Group organizes a competition, where members can gain points if they are the first to solve the question."),(0,o.kt)("p",null,"More specifically, in a competition, the member(s) that receive the highest score have their points doubled and everyone else gets $3$ participation points."),(0,o.kt)("p",null,"The organizers would like to keep track of Joe\u2019s points, but as they suck at math, they have enlisted you to assist them."),(0,o.kt)("h3",{id:"input"},"Input"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The first line of input is an integer $K$ denoting the initial number of points that the members have."),(0,o.kt)("li",{parentName:"ul"},"The second line of input is an integer $N$ denoting the number of competitions held."),(0,o.kt)("li",{parentName:"ul"},"The next $N$ lines contain several numbers which represent the scores that members received on a competition."),(0,o.kt)("li",{parentName:"ul"},"The first number is always the score that Joe received.")),(0,o.kt)("h3",{id:"output"},"Output"),(0,o.kt)("p",null,"A single integer: Joe's points after all competitions have been held."),(0,o.kt)("h1",{id:"examples"},"Examples"),(0,o.kt)("h2",{id:"example-1"},"Example 1"),(0,o.kt)("h3",{id:"input-1"},"Input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"5\n1\n5 3 4 2\n")),(0,o.kt)("h3",{id:"output-1"},"Output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"10\n")),(0,o.kt)("h3",{id:"explanation"},"Explanation"),(0,o.kt)("p",null,"Joe initially has $5$ points. After the first competition, he scores the highest out of all members, so his points double to $5 * 2 = 10$."),(0,o.kt)("h2",{id:"example-2"},"Example 2"),(0,o.kt)("h3",{id:"input-2"},"Input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"3\n2\n7 7 4 5\n5 1 9 3\n")),(0,o.kt)("h3",{id:"output-2"},"Output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"9\n")),(0,o.kt)("h3",{id:"explanation-1"},"Explanation"),(0,o.kt)("p",null,"Joe initially has $3$ points. After the first competition, Joe is tied for first place, meaning he still gets his points doubled ($3 * 2 = 6$). The second competition, Joe doesn't win, but he gets $3$ participation points ($6 + 3 = 9$)."),(0,o.kt)("h1",{id:"model-solution"},"Model Solution"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click to reveal"),(0,o.kt)("p",null,(0,o.kt)("p",null,"Joe's points double iff there were no members that scored higher than him; in other words, iff the number of points Joe received is the maximum score.\nBased on this insight, we can construct the following solution, which utilizes the ",(0,o.kt)("inlineCode",{parentName:"p"},"max()")," function to obtain the maximum value in a list."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"k = int(input())\nn = int(input())\nfor _ in range(n):\n    scores = list(map(int, input().split()))\n    if scores[0] == max(scores):\n        k *= 2\n    else:\n        k += 3\nprint(k)\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Using ",(0,o.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"map")," to parse input"),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"map")," is a built-in function that applies a transformation to its input."),(0,o.kt)("p",{parentName:"admonition"},"The following programs are roughly equivalent:"),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Using ",(0,o.kt)("inlineCode",{parentName:"strong"},"map()"))),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-py"},'strs = ["1", "2", "3", "4", "5"]\nints = map(int, strs)\n# ints = [1, 2, 3, 4, 5]\n')),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Using a loop")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-py"},'strs = ["1", "2", "3", "4", "5"]\nints = []\nfor s in strs:\n    ints.append(int(s))\n# ints = [1, 2, 3, 4, 5]\n')),(0,o.kt)("p",{parentName:"admonition"},"In this case, we use it to succinctly parse the input scores, by splitting the input by whitespace and then using the ",(0,o.kt)("inlineCode",{parentName:"p"},"int()")," conversion function to cast each item to an integer.")))))}m.isMDXComponent=!0}}]);